/*
 * This file was generated by the Gradle 'init' task.
 *
 * This is a general purpose Gradle build.
 * Learn more about Gradle by exploring our samples at https://docs.gradle.org/7.5.1/samples
 */

plugins {
    id 'application'
    id 'com.google.protobuf' version '0.9.1'
}

repositories {
    maven {
        url "https://maven-central.storage-download.googleapis.com/maven2/" }
    mavenCentral()
    mavenLocal()
}


def grpcVersion = '1.50.2'
def protobufVersion = '3.21.7'
def protocVersion = protobufVersion

dependencies {

    runtimeOnly "io.grpc:grpc-netty-shaded:${grpcVersion}"
    implementation "io.grpc:grpc-protobuf:${grpcVersion}"
    implementation "io.grpc:grpc-stub:${grpcVersion}"
    compileOnly "org.apache.tomcat:annotations-api:6.0.53"

    implementation "com.google.protobuf:protobuf-java-util:${protobufVersion}"

    testImplementation "io.grpc:grpc-testing:${grpcVersion}"
    testImplementation "junit:junit:4.13.2"
    testImplementation "org.mockito:mockito-core:4.8.1"
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:${protocVersion}"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:${grpcVersion}"
        }
    }
    generateProtoTasks {
        all()*.plugins { grpc {} }
    }
}

// Inform the automatically generated code to gradle
sourceSets{
    main {
        java {
            srcDirs 'build/generated/source/proto/main/grpc'
            srcDirs 'build/generated/source/proto/main/java'
        }
    }
}


// Startscripts is gonna be created automatically in default
startScripts.enabled = false

task helloWorldServer(type: CreateStartScripts) {
    mainClass = 'in.tutorial.grpc.HelloWorldServer'
    applicationName = 'hello-world-server'
    outputDir = new File(project.buildDir, 'tmp/scripts/' + name)
    classpath = startScripts.classpath
}

task helloWorldClient(type: CreateStartScripts) {
    mainClass = 'in.tutorial.grpc.HelloWorldClient'
    applicationName = 'hello-world-client'
    // project.buildDir: ./build
    // name: grpc-tutorial-in-java
    outputDir = new File(project.buildDir, 'tmp/scripts/' + name)
    classpath = startScripts.classpath
}

task helloServerStreamingServer(type: CreateStartScripts) {
    mainClass = 'in.tutorial.grpc.HelloServerStreamingServer'
    applicationName = 'hello-server-streaming-server'
    outputDir = new File(project.buildDir, 'tmp/scripts/' + name)
    classpath = startScripts.classpath
}

task helloServerStreamingClient(type: CreateStartScripts) {
    mainClass = 'in.tutorial.grpc.HelloServerStreamingClient'
    applicationName = 'hello-server-streaming-client'
    outputDir = new File(project.buildDir, 'tmp/scripts/' + name)
    classpath = startScripts.classpath
}

task RouteGuideServer(type: CreateStartScripts) {
    mainClass = 'in.tutorial.grpc.RouteGuideServer'
    applicationName = 'routeguide-server'
    outputDir = new File(project.buildDir, 'tmp/scripts/' + name)
    classpath = startScripts.classpath
}

task RouteGuideClient(type: CreateStartScripts) {
    mainClass = 'in.tutorial.grpc.RouteGuideClient'
    applicationName = 'routeguide-client'
    outputDir = new File(project.buildDir, 'tmp/scripts/' + name)
    classpath = startScripts.classpath
}

applicationDistribution.into('bin') {
    from(helloWorldServer)
    from(helloWorldClient)
    from(helloServerStreamingServer)
    from(helloServerStreamingClient)
    fileMode = 0755
}